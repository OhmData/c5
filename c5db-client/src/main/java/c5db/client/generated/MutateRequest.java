// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from resources

package c5db.client.generated;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;
import com.dyuproject.protostuff.UninitializedMessageException;

public final class MutateRequest implements Externalizable, Message<MutateRequest>, Schema<MutateRequest>
{

    public static Schema<MutateRequest> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static MutateRequest getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final MutateRequest DEFAULT_INSTANCE = new MutateRequest();


    private RegionSpecifier region;
    private MutationProto mutation;
    private Condition condition;

    public MutateRequest()
    {

    }

    public MutateRequest(
        RegionSpecifier region,
        MutationProto mutation
    )
    {
        this.region = region;
        this.mutation = mutation;
    }

    @Override
    public String toString() {
        return "MutateRequest{" +
                    "region=" + region +
                    ", mutation=" + mutation +
                    ", condition=" + condition +
                '}';
    }
    // getters and setters

    // region

    public RegionSpecifier getRegion()
    {
        return region;
    }


    public MutateRequest setRegion(RegionSpecifier region)
    {
        this.region = region;
        return this;
    }

    // mutation

    public MutationProto getMutation()
    {
        return mutation;
    }


    public MutateRequest setMutation(MutationProto mutation)
    {
        this.mutation = mutation;
        return this;
    }

    // condition

    public Condition getCondition()
    {
        return condition;
    }


    public MutateRequest setCondition(Condition condition)
    {
        this.condition = condition;
        return this;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<MutateRequest> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public MutateRequest newMessage()
    {
        return new MutateRequest();
    }

    public Class<MutateRequest> typeClass()
    {
        return MutateRequest.class;
    }

    public String messageName()
    {
        return MutateRequest.class.getSimpleName();
    }

    public String messageFullName()
    {
        return MutateRequest.class.getName();
    }

    public boolean isInitialized(MutateRequest message)
    {
        return
            message.region != null 
            && message.mutation != null;
    }

    public void mergeFrom(Input input, MutateRequest message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 1:
                    message.region = input.mergeObject(message.region, RegionSpecifier.getSchema());
                    break;

                case 2:
                    message.mutation = input.mergeObject(message.mutation, MutationProto.getSchema());
                    break;

                case 3:
                    message.condition = input.mergeObject(message.condition, Condition.getSchema());
                    break;

                default:
                    input.handleUnknownField(number, this);
            }
        }
    }


    public void writeTo(Output output, MutateRequest message) throws IOException
    {
        if(message.region == null)
            throw new UninitializedMessageException(message);
        output.writeObject(1, message.region, RegionSpecifier.getSchema(), false);


        if(message.mutation == null)
            throw new UninitializedMessageException(message);
        output.writeObject(2, message.mutation, MutationProto.getSchema(), false);


        if(message.condition != null)
             output.writeObject(3, message.condition, Condition.getSchema(), false);

    }

    public String getFieldName(int number)
    {
        switch(number)
        {
            case 1: return "region";
            case 2: return "mutation";
            case 3: return "condition";
            default: return null;
        }
    }

    public int getFieldNumber(String name)
    {
        final Integer number = __fieldMap.get(name);
        return number == null ? 0 : number.intValue();
    }

    private static final java.util.HashMap<String,Integer> __fieldMap = new java.util.HashMap<String,Integer>();
    static
    {
        __fieldMap.put("region", 1);
        __fieldMap.put("mutation", 2);
        __fieldMap.put("condition", 3);
    }

}
