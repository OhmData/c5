// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from resources

package c5db.client.generated;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;
import com.dyuproject.protostuff.UninitializedMessageException;

public final class PageFilter implements Externalizable, Message<PageFilter>, Schema<PageFilter>
{

    public static Schema<PageFilter> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static PageFilter getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final PageFilter DEFAULT_INSTANCE = new PageFilter();


    private Long pageSize;

    public PageFilter()
    {

    }

    public PageFilter(
        Long pageSize
    )
    {
        this.pageSize = pageSize;
    }

    @Override
    public String toString() {
        return "PageFilter{" +
                    "pageSize=" + pageSize +
                '}';
    }
    // getters and setters

    // pageSize

    public Long getPageSize()
    {
        return pageSize;
    }


    public PageFilter setPageSize(Long pageSize)
    {
        this.pageSize = pageSize;
        return this;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<PageFilter> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public PageFilter newMessage()
    {
        return new PageFilter();
    }

    public Class<PageFilter> typeClass()
    {
        return PageFilter.class;
    }

    public String messageName()
    {
        return PageFilter.class.getSimpleName();
    }

    public String messageFullName()
    {
        return PageFilter.class.getName();
    }

    public boolean isInitialized(PageFilter message)
    {
        return
            message.pageSize != null;
    }

    public void mergeFrom(Input input, PageFilter message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 1:
                    message.pageSize = input.readInt64();
                    break;
                default:
                    input.handleUnknownField(number, this);
            }
        }
    }


    public void writeTo(Output output, PageFilter message) throws IOException
    {
        if(message.pageSize == null)
            throw new UninitializedMessageException(message);
        output.writeInt64(1, message.pageSize, false);
    }

    public String getFieldName(int number)
    {
        switch(number)
        {
            case 1: return "pageSize";
            default: return null;
        }
    }

    public int getFieldNumber(String name)
    {
        final Integer number = __fieldMap.get(name);
        return number == null ? 0 : number.intValue();
    }

    private static final java.util.HashMap<String,Integer> __fieldMap = new java.util.HashMap<String,Integer>();
    static
    {
        __fieldMap.put("pageSize", 1);
    }

}
