// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from resources

package c5db.client.generated;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.util.ArrayList;
import java.util.List;

import com.dyuproject.protostuff.ByteString;import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;
import com.dyuproject.protostuff.UninitializedMessageException;

public final class BulkLoadHFileRequest implements Externalizable, Message<BulkLoadHFileRequest>, Schema<BulkLoadHFileRequest>
{
    public static final class FamilyPath implements Externalizable, Message<FamilyPath>, Schema<FamilyPath>
    {

        public static Schema<FamilyPath> getSchema()
        {
            return DEFAULT_INSTANCE;
        }

        public static FamilyPath getDefaultInstance()
        {
            return DEFAULT_INSTANCE;
        }

        static final FamilyPath DEFAULT_INSTANCE = new FamilyPath();


        private ByteString family;
        private String path;

        public FamilyPath()
        {

        }

        public FamilyPath(
            ByteString family,
            String path
        )
        {
            this.family = family;
            this.path = path;
        }

        @Override
        public String toString() {
            return "FamilyPath{" +
                        "family=" + family +
                        ", path=" + path +
                    '}';
        }
        // getters and setters

        // family

        public ByteString getFamily()
        {
            return family;
        }


        public FamilyPath setFamily(ByteString family)
        {
            this.family = family;
            return this;
        }

        // path

        public String getPath()
        {
            return path;
        }


        public FamilyPath setPath(String path)
        {
            this.path = path;
            return this;
        }

        // java serialization

        public void readExternal(ObjectInput in) throws IOException
        {
            GraphIOUtil.mergeDelimitedFrom(in, this, this);
        }

        public void writeExternal(ObjectOutput out) throws IOException
        {
            GraphIOUtil.writeDelimitedTo(out, this, this);
        }

        // message method

        public Schema<FamilyPath> cachedSchema()
        {
            return DEFAULT_INSTANCE;
        }

        // schema methods

        public FamilyPath newMessage()
        {
            return new FamilyPath();
        }

        public Class<FamilyPath> typeClass()
        {
            return FamilyPath.class;
        }

        public String messageName()
        {
            return FamilyPath.class.getSimpleName();
        }

        public String messageFullName()
        {
            return FamilyPath.class.getName();
        }

        public boolean isInitialized(FamilyPath message)
        {
            return
                message.family != null 
                && message.path != null;
        }

        public void mergeFrom(Input input, FamilyPath message) throws IOException
        {
            for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
            {
                switch(number)
                {
                    case 0:
                        return;
                    case 1:
                        message.family = input.readBytes();
                        break;
                    case 2:
                        message.path = input.readString();
                        break;
                    default:
                        input.handleUnknownField(number, this);
                }
            }
        }


        public void writeTo(Output output, FamilyPath message) throws IOException
        {
            if(message.family == null)
                throw new UninitializedMessageException(message);
            output.writeBytes(1, message.family, false);

            if(message.path == null)
                throw new UninitializedMessageException(message);
            output.writeString(2, message.path, false);
        }

        public String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "family";
                case 2: return "path";
                default: return null;
            }
        }

        public int getFieldNumber(String name)
        {
            final Integer number = __fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }

        private static final java.util.HashMap<String,Integer> __fieldMap = new java.util.HashMap<String,Integer>();
        static
        {
            __fieldMap.put("family", 1);
            __fieldMap.put("path", 2);
        }

    }


    public static Schema<BulkLoadHFileRequest> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static BulkLoadHFileRequest getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final BulkLoadHFileRequest DEFAULT_INSTANCE = new BulkLoadHFileRequest();


    private RegionSpecifier region;
    private List<FamilyPath> familyPath;
    private Boolean assignSeqNum;

    public BulkLoadHFileRequest()
    {

    }

    public BulkLoadHFileRequest(
        RegionSpecifier region
    )
    {
        this.region = region;
    }

    @Override
    public String toString() {
        return "BulkLoadHFileRequest{" +
                    "region=" + region +
                    ", familyPath=" + familyPath +
                    ", assignSeqNum=" + assignSeqNum +
                '}';
    }
    // getters and setters

    // region

    public RegionSpecifier getRegion()
    {
        return region;
    }


    public BulkLoadHFileRequest setRegion(RegionSpecifier region)
    {
        this.region = region;
        return this;
    }

    // familyPath

    public List<FamilyPath> getFamilyPathList()
    {
        return familyPath;
    }


    public BulkLoadHFileRequest setFamilyPathList(List<FamilyPath> familyPath)
    {
        this.familyPath = familyPath;
        return this;
    }

    // assignSeqNum

    public Boolean getAssignSeqNum()
    {
        return assignSeqNum;
    }


    public BulkLoadHFileRequest setAssignSeqNum(Boolean assignSeqNum)
    {
        this.assignSeqNum = assignSeqNum;
        return this;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<BulkLoadHFileRequest> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public BulkLoadHFileRequest newMessage()
    {
        return new BulkLoadHFileRequest();
    }

    public Class<BulkLoadHFileRequest> typeClass()
    {
        return BulkLoadHFileRequest.class;
    }

    public String messageName()
    {
        return BulkLoadHFileRequest.class.getSimpleName();
    }

    public String messageFullName()
    {
        return BulkLoadHFileRequest.class.getName();
    }

    public boolean isInitialized(BulkLoadHFileRequest message)
    {
        return
            message.region != null;
    }

    public void mergeFrom(Input input, BulkLoadHFileRequest message) throws IOException
    {
        try {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 1:
                    message.region = input.mergeObject(message.region, RegionSpecifier.getSchema());
                    break;

                case 2:
                    if(message.familyPath == null)
                        message.familyPath = new ArrayList<FamilyPath>();
                    message.familyPath.add(input.mergeObject(null, FamilyPath.getSchema()));
                    break;

                case 3:
                    message.assignSeqNum = input.readBool();
                    break;
                default:
                    input.handleUnknownField(number, this);
            }
        }
        } finally {
        if (message.familyPath != null)
            message.familyPath = java.util.Collections.unmodifiableList(message.familyPath);
        else
            message.familyPath = java.util.Collections.emptyList();
        }
    }


    public void writeTo(Output output, BulkLoadHFileRequest message) throws IOException
    {
        if(message.region == null)
            throw new UninitializedMessageException(message);
        output.writeObject(1, message.region, RegionSpecifier.getSchema(), false);


        if(message.familyPath != null)
        {
            for(FamilyPath familyPath : message.familyPath)
            {
                if(familyPath != null)
                    output.writeObject(2, familyPath, FamilyPath.getSchema(), true);
            }
        }


        if(message.assignSeqNum != null)
            output.writeBool(3, message.assignSeqNum, false);
    }

    public String getFieldName(int number)
    {
        switch(number)
        {
            case 1: return "region";
            case 2: return "familyPath";
            case 3: return "assignSeqNum";
            default: return null;
        }
    }

    public int getFieldNumber(String name)
    {
        final Integer number = __fieldMap.get(name);
        return number == null ? 0 : number.intValue();
    }

    private static final java.util.HashMap<String,Integer> __fieldMap = new java.util.HashMap<String,Integer>();
    static
    {
        __fieldMap.put("region", 1);
        __fieldMap.put("familyPath", 2);
        __fieldMap.put("assignSeqNum", 3);
    }

}
