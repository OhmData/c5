// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from resources

package c5db.client.generated;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class MutateResponse implements Externalizable, Message<MutateResponse>, Schema<MutateResponse>
{

    public static Schema<MutateResponse> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static MutateResponse getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final MutateResponse DEFAULT_INSTANCE = new MutateResponse();


    private Result result;
    private Boolean processed;

    public MutateResponse()
    {

    }

    @Override
    public String toString() {
        return "MutateResponse{" +
                    "result=" + result +
                    ", processed=" + processed +
                '}';
    }
    // getters and setters

    // result

    public Result getResult()
    {
        return result;
    }


    public MutateResponse setResult(Result result)
    {
        this.result = result;
        return this;
    }

    // processed

    public Boolean getProcessed()
    {
        return processed;
    }


    public MutateResponse setProcessed(Boolean processed)
    {
        this.processed = processed;
        return this;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<MutateResponse> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public MutateResponse newMessage()
    {
        return new MutateResponse();
    }

    public Class<MutateResponse> typeClass()
    {
        return MutateResponse.class;
    }

    public String messageName()
    {
        return MutateResponse.class.getSimpleName();
    }

    public String messageFullName()
    {
        return MutateResponse.class.getName();
    }

    public boolean isInitialized(MutateResponse message)
    {
        return true;
    }

    public void mergeFrom(Input input, MutateResponse message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 1:
                    message.result = input.mergeObject(message.result, Result.getSchema());
                    break;

                case 2:
                    message.processed = input.readBool();
                    break;
                default:
                    input.handleUnknownField(number, this);
            }
        }
    }


    public void writeTo(Output output, MutateResponse message) throws IOException
    {
        if(message.result != null)
             output.writeObject(1, message.result, Result.getSchema(), false);


        if(message.processed != null)
            output.writeBool(2, message.processed, false);
    }

    public String getFieldName(int number)
    {
        switch(number)
        {
            case 1: return "result";
            case 2: return "processed";
            default: return null;
        }
    }

    public int getFieldNumber(String name)
    {
        final Integer number = __fieldMap.get(name);
        return number == null ? 0 : number.intValue();
    }

    private static final java.util.HashMap<String,Integer> __fieldMap = new java.util.HashMap<String,Integer>();
    static
    {
        __fieldMap.put("result", 1);
        __fieldMap.put("processed", 2);
    }

}
