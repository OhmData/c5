// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from resources

package c5db.client.generated;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.util.ArrayList;
import java.util.List;

import com.dyuproject.protostuff.ByteString;import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;
import com.dyuproject.protostuff.UninitializedMessageException;

public final class MutationProto implements Externalizable, Message<MutationProto>, Schema<MutationProto>
{
    public static final class ColumnValue implements Externalizable, Message<ColumnValue>, Schema<ColumnValue>
    {
        public static final class QualifierValue implements Externalizable, Message<QualifierValue>, Schema<QualifierValue>
        {

            public static Schema<QualifierValue> getSchema()
            {
                return DEFAULT_INSTANCE;
            }

            public static QualifierValue getDefaultInstance()
            {
                return DEFAULT_INSTANCE;
            }

            static final QualifierValue DEFAULT_INSTANCE = new QualifierValue();


            private ByteString qualifier;
            private ByteString value;
            private Long timestamp;
            private MutationProto.DeleteType deleteType;

            public QualifierValue()
            {

            }

            @Override
            public String toString() {
                return "QualifierValue{" +
                            "qualifier=" + qualifier +
                            ", value=" + value +
                            ", timestamp=" + timestamp +
                            ", deleteType=" + deleteType +
                        '}';
            }
            // getters and setters

            // qualifier

            public ByteString getQualifier()
            {
                return qualifier;
            }


            public QualifierValue setQualifier(ByteString qualifier)
            {
                this.qualifier = qualifier;
                return this;
            }

            // value

            public ByteString getValue()
            {
                return value;
            }


            public QualifierValue setValue(ByteString value)
            {
                this.value = value;
                return this;
            }

            // timestamp

            public Long getTimestamp()
            {
                return timestamp;
            }


            public QualifierValue setTimestamp(Long timestamp)
            {
                this.timestamp = timestamp;
                return this;
            }

            // deleteType

            public MutationProto.DeleteType getDeleteType()
            {
                return deleteType == null ? MutationProto.DeleteType.DELETE_ONE_VERSION : deleteType;
            }


            public QualifierValue setDeleteType(MutationProto.DeleteType deleteType)
            {
                this.deleteType = deleteType;
                return this;
            }

            // java serialization

            public void readExternal(ObjectInput in) throws IOException
            {
                GraphIOUtil.mergeDelimitedFrom(in, this, this);
            }

            public void writeExternal(ObjectOutput out) throws IOException
            {
                GraphIOUtil.writeDelimitedTo(out, this, this);
            }

            // message method

            public Schema<QualifierValue> cachedSchema()
            {
                return DEFAULT_INSTANCE;
            }

            // schema methods

            public QualifierValue newMessage()
            {
                return new QualifierValue();
            }

            public Class<QualifierValue> typeClass()
            {
                return QualifierValue.class;
            }

            public String messageName()
            {
                return QualifierValue.class.getSimpleName();
            }

            public String messageFullName()
            {
                return QualifierValue.class.getName();
            }

            public boolean isInitialized(QualifierValue message)
            {
                return true;
            }

            public void mergeFrom(Input input, QualifierValue message) throws IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            message.qualifier = input.readBytes();
                            break;
                        case 2:
                            message.value = input.readBytes();
                            break;
                        case 3:
                            message.timestamp = input.readUInt64();
                            break;
                        case 4:
                            message.deleteType = MutationProto.DeleteType.valueOf(input.readEnum());
                            break;

                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }


            public void writeTo(Output output, QualifierValue message) throws IOException
            {
                if(message.qualifier != null)
                    output.writeBytes(1, message.qualifier, false);

                if(message.value != null)
                    output.writeBytes(2, message.value, false);

                if(message.timestamp != null)
                    output.writeUInt64(3, message.timestamp, false);

                if(message.deleteType != null)
                     output.writeEnum(4, message.deleteType.number, false);
            }

            public String getFieldName(int number)
            {
                switch(number)
                {
                    case 1: return "qualifier";
                    case 2: return "value";
                    case 3: return "timestamp";
                    case 4: return "deleteType";
                    default: return null;
                }
            }

            public int getFieldNumber(String name)
            {
                final Integer number = __fieldMap.get(name);
                return number == null ? 0 : number.intValue();
            }

            private static final java.util.HashMap<String,Integer> __fieldMap = new java.util.HashMap<String,Integer>();
            static
            {
                __fieldMap.put("qualifier", 1);
                __fieldMap.put("value", 2);
                __fieldMap.put("timestamp", 3);
                __fieldMap.put("deleteType", 4);
            }

        }


        public static Schema<ColumnValue> getSchema()
        {
            return DEFAULT_INSTANCE;
        }

        public static ColumnValue getDefaultInstance()
        {
            return DEFAULT_INSTANCE;
        }

        static final ColumnValue DEFAULT_INSTANCE = new ColumnValue();


        private ByteString family;
        private List<QualifierValue> qualifierValue;

        public ColumnValue()
        {

        }

        public ColumnValue(
            ByteString family
        )
        {
            this.family = family;
        }

        @Override
        public String toString() {
            return "ColumnValue{" +
                        "family=" + family +
                        ", qualifierValue=" + qualifierValue +
                    '}';
        }
        // getters and setters

        // family

        public ByteString getFamily()
        {
            return family;
        }


        public ColumnValue setFamily(ByteString family)
        {
            this.family = family;
            return this;
        }

        // qualifierValue

        public List<QualifierValue> getQualifierValueList()
        {
            return qualifierValue;
        }


        public ColumnValue setQualifierValueList(List<QualifierValue> qualifierValue)
        {
            this.qualifierValue = qualifierValue;
            return this;
        }

        // java serialization

        public void readExternal(ObjectInput in) throws IOException
        {
            GraphIOUtil.mergeDelimitedFrom(in, this, this);
        }

        public void writeExternal(ObjectOutput out) throws IOException
        {
            GraphIOUtil.writeDelimitedTo(out, this, this);
        }

        // message method

        public Schema<ColumnValue> cachedSchema()
        {
            return DEFAULT_INSTANCE;
        }

        // schema methods

        public ColumnValue newMessage()
        {
            return new ColumnValue();
        }

        public Class<ColumnValue> typeClass()
        {
            return ColumnValue.class;
        }

        public String messageName()
        {
            return ColumnValue.class.getSimpleName();
        }

        public String messageFullName()
        {
            return ColumnValue.class.getName();
        }

        public boolean isInitialized(ColumnValue message)
        {
            return
                message.family != null;
        }

        public void mergeFrom(Input input, ColumnValue message) throws IOException
        {
            for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
            {
                switch(number)
                {
                    case 0:
                        return;
                    case 1:
                        message.family = input.readBytes();
                        break;
                    case 2:
                        if(message.qualifierValue == null)
                            message.qualifierValue = new ArrayList<QualifierValue>();
                        message.qualifierValue.add(input.mergeObject(null, QualifierValue.getSchema()));
                        break;

                    default:
                        input.handleUnknownField(number, this);
                }
            }
        }


        public void writeTo(Output output, ColumnValue message) throws IOException
        {
            if(message.family == null)
                throw new UninitializedMessageException(message);
            output.writeBytes(1, message.family, false);

            if(message.qualifierValue != null)
            {
                for(QualifierValue qualifierValue : message.qualifierValue)
                {
                    if(qualifierValue != null)
                        output.writeObject(2, qualifierValue, QualifierValue.getSchema(), true);
                }
            }

        }

        public String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "family";
                case 2: return "qualifierValue";
                default: return null;
            }
        }

        public int getFieldNumber(String name)
        {
            final Integer number = __fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }

        private static final java.util.HashMap<String,Integer> __fieldMap = new java.util.HashMap<String,Integer>();
        static
        {
            __fieldMap.put("family", 1);
            __fieldMap.put("qualifierValue", 2);
        }

    }

    public enum Durability implements com.dyuproject.protostuff.EnumLite<Durability>
    {
        USE_DEFAULT(0),
        SKIP_WAL(1),
        ASYNC_WAL(2),
        SYNC_WAL(3),
        FSYNC_WAL(4);

        public final int number;

        private Durability (int number)
        {
            this.number = number;
        }

        public int getNumber()
        {
            return number;
        }

        public static Durability valueOf(int number)
        {
            switch(number)
            {
                case 0: return USE_DEFAULT;
                case 1: return SKIP_WAL;
                case 2: return ASYNC_WAL;
                case 3: return SYNC_WAL;
                case 4: return FSYNC_WAL;
                default: return null;
            }
        }
    }
    public enum MutationType implements com.dyuproject.protostuff.EnumLite<MutationType>
    {
        APPEND(0),
        INCREMENT(1),
        PUT(2),
        DELETE(3);

        public final int number;

        private MutationType (int number)
        {
            this.number = number;
        }

        public int getNumber()
        {
            return number;
        }

        public static MutationType valueOf(int number)
        {
            switch(number)
            {
                case 0: return APPEND;
                case 1: return INCREMENT;
                case 2: return PUT;
                case 3: return DELETE;
                default: return null;
            }
        }
    }
    public enum DeleteType implements com.dyuproject.protostuff.EnumLite<DeleteType>
    {
        DELETE_ONE_VERSION(0),
        DELETE_MULTIPLE_VERSIONS(1),
        DELETE_FAMILY(2),
        DELETE_FAMILY_VERSION(3);

        public final int number;

        private DeleteType (int number)
        {
            this.number = number;
        }

        public int getNumber()
        {
            return number;
        }

        public static DeleteType valueOf(int number)
        {
            switch(number)
            {
                case 0: return DELETE_ONE_VERSION;
                case 1: return DELETE_MULTIPLE_VERSIONS;
                case 2: return DELETE_FAMILY;
                case 3: return DELETE_FAMILY_VERSION;
                default: return null;
            }
        }
    }


    public static Schema<MutationProto> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static MutationProto getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final MutationProto DEFAULT_INSTANCE = new MutationProto();


    private ByteString row;
    private MutationType mutateType;
    private List<ColumnValue> columnValue;
    private Long timestamp;
    private List<NameBytesPair> attribute;
    private Durability durability;
    private TimeRange timeRange;
    private Integer associatedCellCount;

    public MutationProto()
    {

    }

    @Override
    public String toString() {
        return "MutationProto{" +
                    "row=" + row +
                    ", mutateType=" + mutateType +
                    ", columnValue=" + columnValue +
                    ", timestamp=" + timestamp +
                    ", attribute=" + attribute +
                    ", durability=" + durability +
                    ", timeRange=" + timeRange +
                    ", associatedCellCount=" + associatedCellCount +
                '}';
    }
    // getters and setters

    // row

    public ByteString getRow()
    {
        return row;
    }


    public MutationProto setRow(ByteString row)
    {
        this.row = row;
        return this;
    }

    // mutateType

    public MutationType getMutateType()
    {
        return mutateType == null ? MutationType.APPEND : mutateType;
    }


    public MutationProto setMutateType(MutationType mutateType)
    {
        this.mutateType = mutateType;
        return this;
    }

    // columnValue

    public List<ColumnValue> getColumnValueList()
    {
        return columnValue;
    }


    public MutationProto setColumnValueList(List<ColumnValue> columnValue)
    {
        this.columnValue = columnValue;
        return this;
    }

    // timestamp

    public Long getTimestamp()
    {
        return timestamp;
    }


    public MutationProto setTimestamp(Long timestamp)
    {
        this.timestamp = timestamp;
        return this;
    }

    // attribute

    public List<NameBytesPair> getAttributeList()
    {
        return attribute;
    }


    public MutationProto setAttributeList(List<NameBytesPair> attribute)
    {
        this.attribute = attribute;
        return this;
    }

    // durability

    public Durability getDurability()
    {
        return durability == null ? Durability.USE_DEFAULT : durability;
    }


    public MutationProto setDurability(Durability durability)
    {
        this.durability = durability;
        return this;
    }

    // timeRange

    public TimeRange getTimeRange()
    {
        return timeRange;
    }


    public MutationProto setTimeRange(TimeRange timeRange)
    {
        this.timeRange = timeRange;
        return this;
    }

    // associatedCellCount

    public Integer getAssociatedCellCount()
    {
        return associatedCellCount;
    }


    public MutationProto setAssociatedCellCount(Integer associatedCellCount)
    {
        this.associatedCellCount = associatedCellCount;
        return this;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<MutationProto> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public MutationProto newMessage()
    {
        return new MutationProto();
    }

    public Class<MutationProto> typeClass()
    {
        return MutationProto.class;
    }

    public String messageName()
    {
        return MutationProto.class.getSimpleName();
    }

    public String messageFullName()
    {
        return MutationProto.class.getName();
    }

    public boolean isInitialized(MutationProto message)
    {
        return true;
    }

    public void mergeFrom(Input input, MutationProto message) throws IOException
    {
        try {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 1:
                    message.row = input.readBytes();
                    break;
                case 2:
                    message.mutateType = MutationType.valueOf(input.readEnum());
                    break;

                case 3:
                    if(message.columnValue == null)
                        message.columnValue = new ArrayList<ColumnValue>();
                    message.columnValue.add(input.mergeObject(null, ColumnValue.getSchema()));
                    break;

                case 4:
                    message.timestamp = input.readUInt64();
                    break;
                case 5:
                    if(message.attribute == null)
                        message.attribute = new ArrayList<NameBytesPair>();
                    message.attribute.add(input.mergeObject(null, NameBytesPair.getSchema()));
                    break;

                case 6:
                    message.durability = Durability.valueOf(input.readEnum());
                    break;

                case 7:
                    message.timeRange = input.mergeObject(message.timeRange, TimeRange.getSchema());
                    break;

                case 8:
                    message.associatedCellCount = input.readInt32();
                    break;
                default:
                    input.handleUnknownField(number, this);
            }
        }
        } finally {
        if (message.columnValue != null)
            message.columnValue = java.util.Collections.unmodifiableList(message.columnValue);
        else
            message.columnValue = java.util.Collections.emptyList();
        if (message.attribute != null)
            message.attribute = java.util.Collections.unmodifiableList(message.attribute);
        else
            message.attribute = java.util.Collections.emptyList();
        }
    }


    public void writeTo(Output output, MutationProto message) throws IOException
    {
        if(message.row != null)
            output.writeBytes(1, message.row, false);

        if(message.mutateType != null)
             output.writeEnum(2, message.mutateType.number, false);

        if(message.columnValue != null)
        {
            for(ColumnValue columnValue : message.columnValue)
            {
                if(columnValue != null)
                    output.writeObject(3, columnValue, ColumnValue.getSchema(), true);
            }
        }


        if(message.timestamp != null)
            output.writeUInt64(4, message.timestamp, false);

        if(message.attribute != null)
        {
            for(NameBytesPair attribute : message.attribute)
            {
                if(attribute != null)
                    output.writeObject(5, attribute, NameBytesPair.getSchema(), true);
            }
        }


        if(message.durability != null)
             output.writeEnum(6, message.durability.number, false);

        if(message.timeRange != null)
             output.writeObject(7, message.timeRange, TimeRange.getSchema(), false);


        if(message.associatedCellCount != null)
            output.writeInt32(8, message.associatedCellCount, false);
    }

    public String getFieldName(int number)
    {
        switch(number)
        {
            case 1: return "row";
            case 2: return "mutateType";
            case 3: return "columnValue";
            case 4: return "timestamp";
            case 5: return "attribute";
            case 6: return "durability";
            case 7: return "timeRange";
            case 8: return "associatedCellCount";
            default: return null;
        }
    }

    public int getFieldNumber(String name)
    {
        final Integer number = __fieldMap.get(name);
        return number == null ? 0 : number.intValue();
    }

    private static final java.util.HashMap<String,Integer> __fieldMap = new java.util.HashMap<String,Integer>();
    static
    {
        __fieldMap.put("row", 1);
        __fieldMap.put("mutateType", 2);
        __fieldMap.put("columnValue", 3);
        __fieldMap.put("timestamp", 4);
        __fieldMap.put("attribute", 5);
        __fieldMap.put("durability", 6);
        __fieldMap.put("timeRange", 7);
        __fieldMap.put("associatedCellCount", 8);
    }

}
