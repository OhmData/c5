/*
 * Copyright (C) 2013  Ohm Data
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Affero General Public License as
 *  published by the Free Software Foundation, either version 3 of the
 *  License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Affero General Public License for more details.
 *
 *  You should have received a copy of the GNU Affero General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/** Incorporates changes licensed under:
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Cell and KeyValue protos

option java_package = "c5db.client.generated";
option java_outer_classname = "CellProtos";
option java_generate_equals_and_hash = true;
option optimize_for = SPEED;

/**
 * The type of the key in a Cell
 */
enum CellType {
    MINIMUM = 0;
    PUT = 4;

    DELETE = 8;
    DELETE_COLUMN = 12;
    DELETE_FAMILY = 14;

    // MAXIMUM is used when searching; you look from maximum on down.
    MAXIMUM = 255;
}

/**
 * Protocol buffer version of Cell.
 */
message Cell {
  optional bytes row = 1;
  optional bytes family = 2;
  optional bytes qualifier = 3;
  optional uint64 timestamp = 4;
  optional CellType cell_type = 5;
  optional bytes value = 6;
}

/**
 * Protocol buffer version of KeyValue.
 * It doesn't have those transient parameters
 */
message KeyValue {
  required bytes row = 1;
  required bytes family = 2;
  required bytes qualifier = 3;
  optional uint64 timestamp = 4;
  optional CellType key_type = 5;
  optional bytes value = 6;
}
